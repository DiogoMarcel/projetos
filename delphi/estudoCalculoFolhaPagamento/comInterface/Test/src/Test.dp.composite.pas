unit Test.dp.composite;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, dp.leaf.decSalario, Classes, dp.component,
  System.Generics.Collections, dp.leaf.ferias, System.SysUtils, dp.leaf.mensal,
  dp.composite, dp.leaf.rescisao, dp.leaf.complementar;

type
  // Test methods for class TPacoteCalculo

  TestTPacoteCalculo = class(TTestCase)
  strict private
    FPacoteCalculo: TPacoteCalculo;

    function PegarCalculoMensal: ICalculo;
    procedure AdicionarCalculoMensal;

  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestExecutarCalculo;
    procedure TestAdicionarCalculo;
    procedure TestLimparLista;
  end;

implementation

procedure TestTPacoteCalculo.AdicionarCalculoMensal;
begin
  FPacoteCalculo.AdicionarCalculo(PegarCalculoMensal);
end;

function TestTPacoteCalculo.PegarCalculoMensal: ICalculo;
begin
  Result := TCalculoMensal.Create;
end;

procedure TestTPacoteCalculo.SetUp;
begin
  FPacoteCalculo := TPacoteCalculo.Create;
end;

procedure TestTPacoteCalculo.TearDown;
begin
  FPacoteCalculo.Free;
  FPacoteCalculo := nil;
end;

procedure TestTPacoteCalculo.TestExecutarCalculo;
var
  ReturnValue: Double;
begin
  AdicionarCalculoMensal;

  ReturnValue := FPacoteCalculo.ExecutarCalculo;

  CheckEquals(20000.00, ReturnValue, 'Valor do cálculo mensal não está de acordo!');
end;

procedure TestTPacoteCalculo.TestAdicionarCalculo;
var
  ReturnValue: TPacoteCalculo;
begin
  ReturnValue := FPacoteCalculo.AdicionarCalculo(PegarCalculoMensal);

  CheckFalse(ReturnValue.ListaIsEmpty, 'Lista NÃO deve estar vazia!');
end;

procedure TestTPacoteCalculo.TestLimparLista;
var
  ReturnValue: TPacoteCalculo;
begin
  AdicionarCalculoMensal;

  ReturnValue := FPacoteCalculo.LimparLista;

  CheckTrue(ReturnValue.ListaIsEmpty, 'Lista deve estar vazia!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTPacoteCalculo.Suite);
end.

